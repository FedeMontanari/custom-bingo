generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id   String @id @default(cuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdGames BingoGame[]  @relation("GameCreator")
  playerGames  PlayerGame[]
}

model BingoGame {
  id       String  @id @default(cuid())
  code     String  @unique // Shareable code for joining
  title    String
  rows     Int
  cols     Int
  content  Json // Array of cell contents (text, emojis, etc.)
  isActive Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creator     User         @relation("GameCreator", fields: [creatorId], references: [id])
  creatorId   String
  players     PlayerGame[]
  calledItems CalledItem[]
}

model PlayerGame {
  id String @id @default(cuid())

  // Player's card state
  cardState Json // Array of marked cells
  hasWon    Boolean   @default(false)
  wonAt     DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User      @relation(fields: [userId], references: [id])
  userId String
  game   BingoGame @relation(fields: [gameId], references: [id])
  gameId String

  @@unique([userId, gameId])
}

model CalledItem {
  id       String @id @default(cuid())
  gameId   String
  content  String // The item that was called (text, emoji, etc.)
  position Int // The position in the original content array

  createdAt DateTime @default(now())

  game BingoGame @relation(fields: [gameId], references: [id])
}
