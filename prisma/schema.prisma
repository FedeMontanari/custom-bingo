generator zod {
  provider         = "zod-prisma-types"
  output           = "./generated/zod"
  writeBarrelFiles = "false"
  useMultipleFiles = "true"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model BingoGame {
  id        String   @id @default(cuid())
  code      String   @unique // Shareable code for joining
  title     String
  rows      Int
  cols      Int
  content   Json // Array of cell contents (text, emojis, etc.)
  organizer String
  players   String[]
  isActive  Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BingoCard BingoCard[]
}

model BingoCard {
  id         String      @id @default(cuid())
  gameId     String
  cardState  CardState[]
  hasWon     Boolean     @default(false)
  playerName String
  wonAt      DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  game BingoGame @relation(fields: [gameId], references: [id])
}

model CardState {
  id      String  @id @default(cuid())
  content String
  marked  Boolean @default(false)
  cardId  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  card BingoCard @relation(fields: [cardId], references: [id])
}
